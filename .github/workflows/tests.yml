name: tests

on: [push, pull_request]

jobs:
  build:
    # Don't run twice for internal PRs from our own repo
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '2.7', '3.x' ]
        tmux-version: [ '2.6', '2.7', '2.8', '3.0a', '3.1b', 'master' ]
    steps:
    - uses: actions/checkout@v1

    - name: Install poetry
      run: pipx install "poetry==1.0.10"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Configure poetry
      shell: bash
      run: poetry config virtualenvs.in-project true

    - name: Setup tmux build cache for tmux ${{ matrix.tmux-version }}
      id: tmux-build-cache
      uses: actions/cache@v3
      with:
        path: ~/tmux-builds/tmux-${{ matrix.tmux-version }}
        key: tmux-${{ matrix.tmux-version }}

    - name: Build tmux ${{ matrix.tmux-version }}
      if: steps.tmux-build-cache.outputs.cache-hit != 'true'
      run: |
        sudo apt install libevent-dev libncurses5-dev libtinfo-dev libutempter-dev bison
        mkdir ~/tmux-builds
        mkdir ~/tmux-src
        git clone https://github.com/tmux/tmux.git ~/tmux-src/tmux-${{ matrix.tmux-version }}
        cd ~/tmux-src/tmux-${{ matrix.tmux-version }}
        git checkout ${{ matrix.tmux-version }}
        sh autogen.sh
        ./configure --prefix=$HOME/tmux-builds/tmux-${{ matrix.tmux-version }} && make && make install
        export PATH=$HOME/tmux-builds/tmux-${{ matrix.tmux-version }}/bin:$PATH
        cd ~
        tmux -V

    - name: Install python dependencies
      run: |
        poetry install -E "test coverage lint"

    - name: Lint with flake8
      run: |
        poetry run flake8

    - name: Print python versions
      run: |
        python -V
        poetry run python -V

    - name: Test with pytest
      continue-on-error: ${{ matrix.tmux-version == 'master' }}
      run: |
        export PATH=$HOME/tmux-builds/tmux-${{ matrix.tmux-version }}/bin:$PATH
        ls $HOME/tmux-builds/tmux-${{ matrix.tmux-version }}/bin
        tmux -V
        poetry run py.test --cov=./ --cov-append --cov-report=xml
      env:
        COV_CORE_SOURCE: .
        COV_CORE_CONFIG: .coveragerc
        COV_CORE_DATAFILE: .coverage.eager
    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
